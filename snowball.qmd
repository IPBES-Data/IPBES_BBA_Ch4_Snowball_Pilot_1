---
title: "Business and Biopdiversity - Ch 4 - Snowball Pilot"
author: Rainer M Krug <Rainer.Krug@senckenberg.de> <Rainer@krugs.de>
format:
    html:
        toc: true
        toc-depth: 2
        embed-resources: true
        code-fold: true
        code-summary: "Show the code"
        grid:
            sidebar-width: 0px
            body-width: 4000px
            margin-width: 200px
            gutter-width: 1.5rem   
params:
    key_paper: "Clement.bib"
---

# Back to [Readme](https://IPBES-Data.github.io/IPBES_BBA_Ch4_Snowball_Pilot_1/)

# Setup
```{r}
#| label: setup
#|
if (!exists("params")) {
    params <- rmarkdown::yaml_front_matter("snowball.qmd")$params
}

library(IPBES.R)

library(openalexR)

library(tibble)
library(dplyr)

library(knitr)

library(networkD3)

# list.files(
#     "R",
#     full.names = TRUE,
#     recursive = TRUE
# ) |>
#     sapply(
#         FUN <- source
#     )

kp_dois <- file.path("input", "key_papers", params$key_paper) |>
    readLines() |>
    grep(
        pattern = "doi = ",
        value = TRUE
    ) |>
    sub(
        pattern = ".*\\{",
        replacement = ""
    ) |>
    gsub(
        pattern = "\\}.$",
        replacement = ""
    )
```

# Searches

## Setup OpenAlex usage

```{r}
#| label: openalex_prep
#|

fn <- file.path("data", "key_works.rds")
if (file.exists(fn)) {
    key_works <- readRDS(fn)
} else {
    key_works <- oa_fetch(
        entity = "works",
        doi = kp_dois,
        verbose = FALSE
    )
    saveRDS(key_works, fn)
}
```

## Do first snowball search (S1)
```{r}
#| label: openalex_snowball_1
fn <- file.path(".", "data", "snowball_1.rds")
if (file.exists(fn)) {
    snowball_1 <- readRDS(fn)
} else {
    snowball_1 <- oa_snowball(
        identifier = openalexR:::shorten_oaid(key_works$id),
        verbose = FALSE
    )
    saveRDS(snowball_1, fn)
}

flat_snow_1 <- snowball2df(snowball_1) |>
    as_tibble()
```

The search resulted in **`r nrow(snowball_1$nodes)`** papers and **`r nrow(snowball_1$edges)`** citations, including the key-papers.

## Do second snowball search (S2)

For the second snowball search (S2) we use the corpus identified by S1 as the key-papers.

This needs to be enabled (`eval = false` needs to be changed to `eval = true` in the following code block) as the resulting data file is to large for github and running of the snowball search
takes several hours.

```{r}
#| label: openalex_snowball_2
#| eval: false

fn <- file.path(".", "data", "snowball_2.rds")
if (file.exists(fn)) {
    snowball_2 <- readRDS(fn)
} else {
    snowball_2 <- oa_snowball(
        identifier = openalexR:::shorten_oaid(snowball_1$nodes$id),
        verbose = FALSE
    )
    saveRDS(snowball_2, fn)
}

flat_snow_2 <- snowball2df(snowball_1) |>
    as_tibble()
```

The search resulted in **`r paste(ifelse(exists("snowball_2"), nrow(snowball_2$nodes), 167275))`** papers and **`r paste(ifelse(exists("snowball_2"), nrow(snowball_2$edges), 225735))`** citations, including the key-papers, i.e. papers in corpus S1.

# Export S1 Corpus to Excel file

Only S1 can be exported to Excel due to the size of the S2 corpus.

```{r}
#| label: openalex_excel
#|

fn <- file.path(".", "data", "snowball_1.xlsx")
if (!file.exists(fn)) {
    to_xlsx(
        snowball = snowball_1,
        xls_filename = fn
    )
}

# fn <- file.path(".", "data", "snowball_2.xlsx")
# if (!file.exists(fn)) {
#     to_xlsx(
#         snowball = snowball_2,
#         xls_filename = fn
#     )
# }
```
[To download Excel file click here](data/snowball_1.xlsx)

The column are: (the Concept columns are not that relevant at the moment)

- **id**: internal id fromOpenAlex
- **author**: authors of the paper
- **publication_year**: publication year
- **title**: title of the paper
- **doi**: doi of the paper
- **no_referenced_works**: number of references in the paper which are also in OpenAlex
- **cited_global**: Number of times the paper has been cited
- **cited_global_per_year**: standardised  number of times cirted (cited_global / number of years published)
- **no_connections**: number of connections in the rgaph, i.e. either cited or citing a paper in the snowball corpus
- **concepts_l0**: Concept 0. level assigned by OpenAlex
- **concepts_l1**: Concept 1. level assigned by OpenAlex
- **concepts_l2**: Concept 2. level assigned by OpenAlex
- **concepts_l3**: Concept 3. level assigned by OpenAlex
- **concepts_l4**: Concept 4. level assigned by OpenAlex
- **concepts_l5**: Concept 5. level assigned by OpenAlex
- **author_institute**: Institute of the authors
- **institute_country**: Country of the institute
- **abstract**: the abstract of the paper

# Graphs

## Static Citation Network Graph of the S1 Corpus


Only S1 corpus of S1 can be graphed due to the size of the S2 corpus.

```{r}
#| label: openalex_graph_S1

if ((length(list.files(path = "figures", pattern = "Snowball_1_.*", recursive = TRUE))) < 4) {
    plot_snowball(
        snowball_1,
        name = "Snowball_1"
    )
}
```


![](figures/Snowball_1_cited_by_count_by_year.png)
[Right click - Download for (better quality)](figures/Snowball_1_cited_by_count_by_year.pdf)

## Interactive Citation Network Graph of the S1 Corpus

```{r}
#| label: openalex_graph_S1_interactive
#| 

nwg <- IPBES.R::plot_snowball_interactive(snowball_1)
saveNetwork(
    nwg, 
    file = file.path("figures", "S1_interactive_network.html"),
    selfcontained = TRUE
)
unlink(file.path("figures", "S1_interactive_network_files"), recursive = TRUE)
nwg
```

To open the interactive graph in a standalone window [click here](figures/S1_interactive_network.html){target=_blank}.

The following interactions are possible:

- moving your mouse over a node, the title author and year of the paper is shown.
- clicking on a node will open the paper in a new tab.
- scrolling up and down with your scroll wheel zooms in and out
- clicking on the canvas and move the mouse will move the network
- clicking on a node and dragging it moves the node

# Identification of references with more than one edge

This is the number of connections (`connection_count`) of the paper (`id`)

Only the corpus of S1 is shown here due to the size of the S2 corpus.

```{r}
#| label: openalex_edgecount
#|
mult_edge <- flat_snow_1 |>
    select(id, connection_count) |>
    filter(connection_count > 1) |>
    arrange(desc(connection_count))

links <- flat_snow_1 |>
    filter(id %in% mult_edge$id)

links |>
    select(id, display_name, publication_year, doi, connection_count) |>
    arrange(desc(connection_count)) |>
    knitr::kable()
```
